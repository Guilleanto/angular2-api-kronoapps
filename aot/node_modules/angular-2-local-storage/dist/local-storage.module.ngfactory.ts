/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'angular-2-local-storage/dist/local-storage.module';
import * as import2 from 'angular-2-local-storage/dist/local-storage.service';
import * as import3 from '@angular/core/src/di/injector';
class LocalStorageModuleInjector extends import0.NgModuleInjector<import1.LocalStorageModule> {
  _LocalStorageModule_0:import1.LocalStorageModule;
  __LocalStorageService_1:import2.LocalStorageService;
  constructor(parent:import3.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _LocalStorageService_1():import2.LocalStorageService {
    if ((this.__LocalStorageService_1 == null)) { (this.__LocalStorageService_1 = new import2.LocalStorageService(this.parent.get('LOCAL_STORAGE_SERVICE_CONFIG'))); }
    return this.__LocalStorageService_1;
  }
  createInternal():import1.LocalStorageModule {
    this._LocalStorageModule_0 = new import1.LocalStorageModule();
    return this._LocalStorageModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.LocalStorageModule)) { return this._LocalStorageModule_0; }
    if ((token === import2.LocalStorageService)) { return this._LocalStorageService_1; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const LocalStorageModuleNgFactory:import0.NgModuleFactory<import1.LocalStorageModule> = new import0.NgModuleFactory(LocalStorageModuleInjector,import1.LocalStorageModule);