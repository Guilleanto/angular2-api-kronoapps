{"version":3,"file":"my-module.module.js","sourceRoot":"","sources":["../src/my-module.module.ts"],"names":[],"mappings":"OACO,EAAE,QAAQ,EAAuB,MAAM,eAAe;OAGtD,EAAE,WAAW,EAAE,MAAM,2BAA2B;OAGhD,EAAE,WAAW,EAAE,MAAM,2BAA2B;OAChD,EAAE,iBAAiB,EAAE,MAAM,iCAAiC;OAC5D,EAAE,oBAAoB,EAAE,MAAM,oCAAoC;OAClE,EAAE,YAAY,EAAE,MAAM,4BAA4B;OAClD,EAAE,WAAW,EAAE,MAAM,2BAA2B;OAChD,EAAE,cAAc,EAAE,MAAM,8BAA8B;OACtD,EAAE,eAAe,EAAE,MAAM,+BAA+B;OACxD,EAAE,YAAY,EAAE,MAAM,4BAA4B;OAClD,EAAE,aAAa,EAAE,MAAM,6BAA6B;OACpD,EAAE,YAAY,EAAE,MAAM,4BAA4B;OAClD,EAAE,YAAY,EAAE,MAAM,4BAA4B;OAClD,EAAE,aAAa,EAAE,MAAM,6BAA6B;OACpD,EAAE,aAAa,EAAE,MAAM,6BAA6B;OACpD,EAAE,aAAa,EAAE,MAAM,6BAA6B;OACpD,EAAE,eAAe,EAAE,MAAM,+BAA+B;AAG/D;IAAA;IAoCA,CAAC;IAnCO,gBAAO,GAAd;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE;gBACV,WAAW;gBACX,iBAAiB;gBACjB,oBAAoB;gBACpB,WAAW;gBACX,YAAY;gBACZ,cAAc;gBACd,eAAe;gBACf,YAAY;gBACZ,aAAa;gBACb,YAAY;gBACZ,YAAY;gBACZ,aAAa;gBACb,aAAa;gBACb,aAAa;gBACb,eAAe;aACf;SACJ,CAAC;IACN,CAAC;IACK,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACxB,YAAY,EAAE;wBACV,WAAW;qBACd;oBACD,OAAO,EAAE;wBACL,WAAW;qBACd;iBACD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uBAAc,GAA6D,EACjF,CAAC;IACF,eAAC;AAAD,CAAC,AApCD,IAoCC","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\n// Components\r\nimport { MyComponent } from './components/my-component';\r\n\r\n// Providers\r\nimport { BaseService } from './providers/base-provider';\r\nimport { CategoriesService } from './providers/categories-provider';\r\nimport { SubcategoriesService } from './providers/subcategories-provider';\r\nimport { StoreService } from './providers/store-provider';\r\nimport { TagsService } from './providers/tags-provider';\r\nimport { CouponsService } from './providers/coupons-provider';\r\nimport { ProductsService } from './providers/products-provider';\r\nimport { UsersService } from './providers/users-provider';\r\nimport { OrdersService } from './providers/orders-provider';\r\nimport { ListsService } from './providers/lists-provider';\r\nimport { LoginService } from './providers/login-provider';\r\nimport { BasketService } from './providers/basket-provider';\r\nimport { ChainsService } from './providers/chains-provider';\r\nimport { CitiesService } from './providers/cities-provider';\r\nimport { FeedbackService } from './providers/feedback-provider';\r\n\r\n\r\nexport class MyModule {\r\n\tstatic forRoot(): ModuleWithProviders {\r\n\t    return {\r\n\t        ngModule: MyModule,\r\n\t        providers: [ \r\n\t\t        BaseService,\r\n\t\t        CategoriesService,\r\n\t\t        SubcategoriesService,\r\n\t\t        TagsService,\r\n\t\t        StoreService,\r\n\t\t        CouponsService,\r\n\t\t        ProductsService,\r\n\t\t        UsersService,\r\n\t\t        OrdersService,\r\n\t\t        ListsService,\r\n\t\t        LoginService,\r\n\t\t        BasketService,\r\n\t\t        ChainsService,\r\n\t\t        CitiesService,\r\n\t\t        FeedbackService\r\n\t        ]\r\n\t    };\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n\tdeclarations: [\r\n\t    MyComponent\r\n\t],\r\n\texports: [\r\n\t    MyComponent\r\n\t]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}