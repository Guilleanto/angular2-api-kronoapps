{"version":3,"file":"users-provider.js","sourceRoot":"","sources":["../../src/providers/users-provider.ts"],"names":[],"mappings":";;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,SAAS;OACT,EAAE,IAAI,EAAE,MAAM,eAAe;OAC7B,EAAE,eAAe,EAAE,MAAM,sBAAsB;OAC/C,EAAE,mBAAmB,EAAE,MAAM,yBAAyB;OAGtD,EAAE,WAAW,EAAE,MAAM,eAAe;OAGpC,EAAE,SAAS,EAAE,MAAM,qBAAqB;AAG/C;IAAkC,gCAAW;IAKzC,sBAAmB,IAAU,EAAS,YAAiC;QACnE,kBAAM,IAAI,EAAE,YAAY,CAAC,CAAC;QADX,SAAI,GAAJ,IAAI,CAAM;QAAS,iBAAY,GAAZ,YAAY,CAAqB;QAHvE,aAAa;QACb,SAAI,GAAgB,EAAE,CAAC;IAIvB,CAAC;IAED,+DAA+D;IAC/D,8BAAO,GAAP,UAAQ,aAAa,EAAE,MAAM;QAEzB,wCAAwC;QACxC,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,aAAa,GAAG,UAAU,GAAG,MAAM,GAAG,GAAG,EAC1D,IAAI,CAAC,oBAAoB,EAAE,CAAC;aACpC,SAAS,CAAC,UAAA,QAAQ;YACf,IAAI,IAAI,GAAc,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC9C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACN,MAAM,CAAC,QAAQ,CAAC;IACrB,CAAC;IAED,2DAA2D;IAC3D,+BAAQ,GAAR,UAAS,OAAO,EAAE,IAAI;QAElB,wCAAwC;QACxC,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QAEvB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,OAAO,EAAE,IAAI,CAAC;aAC/C,SAAS,CAAC,UAAA,IAAI;YACX,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED,oDAAoD;IACpD,gDAAgD;IAChD,kCAAW,GAAX,UAAY,OAAO,EAAE,IAAI;QAErB,wCAAwC;QACxC,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QAEvB,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,6BAA6B,EAAE,OAAO,EACtC,IAAI,CAAC,oBAAoB,EAAE,CAAC;aACrC,SAAS,CAAC,UAAA,IAAI;YACX,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAEE,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,2BAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,IAAI,GAAG;QACd,EAAC,IAAI,EAAE,mBAAmB,GAAG;KAC5B,CAAC;IACF,mBAAC;AAAD,CAAC,AAxED,CAAkC,WAAW,GAwE5C","sourcesContent":["import { Injectable } from '@angular/core';\nimport 'rxjs/Rx';\nimport { Http } from '@angular/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { LocalStorageService } from 'angular-2-local-storage';\n\n// Providers\nimport { BaseService } from './my-provider';\n\n// Models\nimport { UserModel } from '../models/userModel';\n\n\nexport class UsersService extends BaseService {\n\n    // user array\n    user: UserModel[] = [];\n\n    constructor(public http: Http, public localStorage: LocalStorageService) {\n        super(http, localStorage);\n    }\n\n    // getUser function: obtain information of user in Botica Junin\n    getUser(applicationId, userId) {\n\n        // Initial value to the observer is null\n        let observer = new BehaviorSubject(null);\n\n        this.getBase('application/' + applicationId + '/client/' + userId + '/', \n                     this.headerAuthentication())\n            .subscribe(userData => {\n                var user: UserModel = new UserModel(userData);\n                observer.next(user);\n            }, error => {\n                observer.next(error);\n            });\n         return observer;             \n    }\n\n    // postUser function: create new user in application Botica\n    postUser(payload, task) {\n\n        // Initial value to the observer is null\n        let observer = new BehaviorSubject(null);\n\n        payload['task'] = task;\n\n        console.log(\"PAYLOAD USER REGISTRO\", payload);\n        this.saveBase('application/clients/', payload, null)\n            .subscribe(data => {\n                observer.next(data);\n            }, error => {\n                observer.next(error);\n            });\n        return observer;        \n    }\n\n    // postAddress function: create or delete address in\n    //                       specific client profile\n    postAddress(payload, task) {\n\n        // Initial value to the observer is null\n        let observer = new BehaviorSubject(null);\n\n        payload['task'] = task;\n\n        console.log(\"PAYLOAD ADDRESS USER\", payload);\n        this.saveBase('application/client/address/', payload, \n                      this.headerAuthentication())\n            .subscribe(data => {\n                observer.next(data);\n            }, error => {\n                observer.next(error);\n            });\n        return observer;  \n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Http, },\n{type: LocalStorageService, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}