{"version":3,"file":"basket-provider.js","sourceRoot":"","sources":["../../src/providers/basket-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport 'rxjs/Rx';\nimport { Http } from '@angular/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { LocalStorageService } from 'angular-2-local-storage';\n\n// Providers\nimport { BaseService } from './base-provider';\n\n// Models\nimport { BasketModel } from '../models/basketModel';\n\n\nexport class BasketService extends BaseService {\n\n    itemPost: any;\n\n    constructor(public http: Http, public localStorage: LocalStorageService) {               \n        super(http, localStorage);\n    }\n\n    // getBasket function: obtain information of basket\n    //                     of specific client in Botica store\n    getBasket(applicationId, userId, storeId) {\n\n        // Initial value to the observer is null\n        let observer = new BehaviorSubject(null);\n\n        this.getBase('application/' + applicationId + '/client/' + userId + \n                     '/store/' + storeId + '/basket/', \n                     this.headerAuthentication())\n            .subscribe(basket => {\n                var basketClient: BasketModel = new BasketModel(basket);\n                observer.next(basketClient);\n            }, error => {\n                observer.next(error);\n            }); \n        return observer;\n    }\n\n    // postItems function: post items inside basket of specific\n    //                     client in Botica store\n    postItemsDelete(payload) {\n        \n        payload['task'] = 'delete_items';\n        console.log(\"payload de lo que hare post\", payload);\n\n        // Initial value to the observer is null\n        let observer = new BehaviorSubject(null);\n        this.saveBase('client/store/basket/deleteitems/', payload,\n                      this.headerAuthentication())\n            .subscribe(data => {\n                observer.next(data);\n            }, error => {\n                observer.next(error);\n            });\n        return observer;\n    }\n\n    // postItem function: post item inside basket of specific\n    //                    client in Botica store\n    postItem(item, itemId=null, typeTask) {\n\n        if (typeTask == 'add') {\n\n            this.itemPost = {\n                task: typeTask,\n                observation: null,\n                quantity: item.quantity,\n                checked: false,\n                cost: 0,\n                color_prim: item.color_prim,\n                color_sec: item.color_sec,\n                image_default: item.images[0].image,\n                unit_default: item.unit_default.unit_type,\n                price_default: item.unit_default.price,\n                weight_default: item.unit_default.weight,\n                quantity_default: item.unit_default.quantity,\n                description: item.description,\n                name: item.name,\n                has_prom: item.has_prom,\n                has_prescription: item.has_prescription,\n                percentage: item.percentage,\n                orderId: null,\n                basketId: this.localStorage.get('basketId'),\n                listId: null,\n                productId: item.id\n            }\n            \n            this.saveBase('client/store/basket/items/', this.itemPost,\n                          this.headerAuthentication())\n                .subscribe(data => {\n                    console.log(\"ITEMPOST AL AGREGAR\", this.itemPost);\n                    item.loadedProduct.next(data);\n                }, error => {\n                    item.loadedProduct.next(error);\n                    console.log(\"ESTE FUE EL ERROR\", error);\n                });\n            return item.loadedProduct;\n      \n        }\n\n        else if (typeTask == 'edit') {\n\n            this.itemPost = {\n                task: typeTask,\n                id: itemId,\n                observation: null,\n                quantity: item.quantity,\n                checked: false,\n                cost: 0,\n                color_prim: item.color_prim,\n                color_sec: item.color_sec,\n                image_default: item.images[0].image,\n                unit_default: item.unit_default.unit_type,\n                price_default: item.unit_default.price,\n                weight_default: item.unit_default.weight,\n                quantity_default: item.unit_default.quantity,\n                description: item.description,\n                name: item.name,\n                has_prom: item.has_prom,\n                has_prescription: item.has_prescription,\n                percentage: item.percentage,\n                orderId: null,\n                basketId: this.localStorage.get('basketId'),\n                listId: null,\n                productId: item.id\n            }\n\n            this.saveBase('client/store/basket/items/', this.itemPost,\n                          this.headerAuthentication())                 \n                .subscribe(data => {\n                    console.log(\"ITEMPOST AL EDITAR\", this.itemPost);\n                }, error => {\n                    console.log(\"ESTE FUE EL ERROR\", error);\n                });  \n        }\n\n        else if (typeTask == 'delete') {\n\n            this.itemPost = {\n                task: typeTask,\n                id: itemId\n            }\n\n            this.saveBase('client/store/basket/items/', this.itemPost,\n                          this.headerAuthentication())\n                .subscribe(data => {\n                    console.log(\"ITEMPOST AL ELIMINAR\", this.itemPost);\n                }, error => {\n                    console.log(\"ESTE FUE EL ERROR\", error);\n                });\n            item.loadedProduct = new BehaviorSubject(null);\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Http, },\n{type: LocalStorageService, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}