{"version":3,"file":"base-provider.js","sourceRoot":"","sources":["../../src/providers/base-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { LocalStorageService } from 'angular-2-local-storage';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/Rx';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\n\nimport { JwtHelper } from \"angular2-jwt\";\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { _ERROR } from './errors';\n\n\nexport class BaseService {\n  \n    // Base path\n    path: string = \"https://api.kronogroup.co/\";\n    //path: string = 'http://api-dev.kronogroup.co/';\n    //path: string = 'https://api-qa.kronogroup.co/';\n\n    info: any;\n    headerObject: any;\n\n    jwtHelper = new JwtHelper();\n\n    constructor(public http: Http, public localStorage: LocalStorageService) {\n\n    }\n\n    // getBase function: get information from server with base path url \n    getBase(path2, options=null) {\n\n        let d = new Date();\n        let actualTime = Math.floor(d.getTime()/1000);\n        let tokenExp: any = this.localStorage.get('tokenExp');\n\n        if ( (this.localStorage.get('tokenExp') != null) && \n             (actualTime >= parseInt(tokenExp)-60) ) {\n            console.log(\"VOY A REFRESCAR TOKEN EN GET\")\n            // Initial value to the observer is null\n            return new Observable(observer => {\n                this.postRefreshToken().subscribe(data => {\n                    if (data) {\n                        this.http.get(this.path + path2, this.headerAuthentication())\n                        .map(res => res.json())\n                        .catch(this.handleError)\n                        .retry(5)\n                        .subscribe( res => observer.next(res))\n                    }\n                })\n                return observer;    \n            });\n        }\n        else {\n            return this.http.get(this.path + path2, options)\n                .map(res => res.json())\n                .catch(this.handleError)\n                .retry(5)  \n        }\n \n    }\n\n    // saveBase function: post in server with base path url\n    saveBase(path2, payload, options=null) {\n\n        let d = new Date();\n        let actualTime = Math.floor(d.getTime()/1000);\n\n        if ( (this.localStorage.get('tokenExp') != null) && \n             (actualTime >= this.localStorage.get('tokenExp')) ) {\n            console.log(\"VOY A REFRESCAR TOKEN EN POST\")\n            // Initial value to the observer is null\n            return new Observable(observer => {\n                this.postRefreshToken().subscribe(data => {\n                    if (data) {\n                        this.http.post(this.path + path2, payload, this.headerAuthentication())\n                        .map(res => res.json())\n                        .catch(this.handleError)\n                        .retry(5) \n                        .subscribe( res => observer.next(res))\n                    }\n                })\n                return observer;    \n            });\n        }\n        else {\n            return this.http.post(this.path + path2, payload, options)\n                        .map(res => res.json())\n                        .catch(this.handleError)\n                        .retry(5)  \n        }\n \n    }\n\n    // handleError function: throw error catched to specific service and specific component,\n    //                       server error or client error\n    handleError = (response: Response) => {\n\n        console.log(\"ERROR EN HANDLE ERROR\", response);\n\n        // If error is SERVER ERROR or CLIENT ERROR\n        if ( (response.status >= 401 && response.status <= 511) || (response.status >= 2 && response.status <= 324)) {\n            return Observable.throw({'error': response.status});\n        }\n\n        // If error is created in backend\n        else {\n\n            // Signature has expired. Refresh token\n            /*if (response.json().error == 9) {\n\n\n            }*/\n\n            // Refresh has expired. Logout\n            if (response.json().error == 14) {\n                console.log(\"ME DIO ERROR 14 CERRARE SESION\")\n                this.localStorage.remove('userId');\n                this.localStorage.remove('basket');\n                this.localStorage.remove('basketId');\n                this.localStorage.remove('tokenUser');\n                this.localStorage.remove('tokenExp');\n                console.log(\"response de error 14\", response.json())\n                return Observable.throw(response.json());\n            }\n\n            // Others errors\n            else {\n                return Observable.throw(response.json());\n            }\n        }  \n    }\n\n    // postRefreshToken function: if token of user is expired, send post to \n    //                            request new token\n    postRefreshToken() {\n\n        // Initial value to the observer is null\n        let observer = new BehaviorSubject(null);\n\n        let postToken = {\n            'token': this.localStorage.get('tokenUser')\n        }\n\n        this.http.post(this.path + 'api-token-refresh-client/', postToken, null)\n                .map(res => res.json())\n                .catch(this.handleError)\n                .subscribe(data => {\n                    console.log(\"REFRESQUE TOKEN\", data);\n                    this.localStorage.set('tokenUser', data.token);\n                    let user = this.jwtHelper.decodeToken(data.token);\n                    this.localStorage.set('tokenExp', user.exp);\n                    observer.next(data);\n                }, error => {\n                    console.log(\"Error\", error)\n                    observer.next(error);\n                });\n            return observer;\n    }\n\n    // headerLogin function: create header object to pass like header \n    //                       in every login post\n    headerLogin = () => {\n\n        let header = {\n            'Content-Type': 'application/json'\n        };\n\n        this.headerObject = {\n            headers: new Headers(header)\n        };\n\n        return this.headerObject;\n    }\n\n    // headerAuthentication function: header neccesary to every request in the app with\n    //                                client in specific\n    headerAuthentication = () => {\n\n        let headers = new Headers({\n            'Authorization': \"JWT \" + this.localStorage.get('tokenUser'),\n            'Content-Type': 'application/json'\n        });\n\n        let options = new RequestOptions({ headers: headers })\n\n        return options;\n    }\n\n    // ******************************** BASE SERVICE ADMIN *************************** //\n\n    headerAuthenticationAdmin() {\n        let authToken = JSON.parse(localStorage.getItem('currentUser')).token;\n        let headers = new Headers({\n            'Authorization': 'JWT ' + authToken,\n            'Content-Type': 'application/json',\n        });\n\n        let options = new RequestOptions({ headers: headers})\n\n        return options;\n    }\n\n    getAdmin(a, options=null) {\n        //console.log(options);\n        return this.http.get(this.path + a, this.headerAuthenticationAdmin())\n            .map(res => res.json())\n            .catch(this.errors);\n    }\n\n    saveAdmin(endpoint, payload, options=null) {\n        console.log('payload --> ',payload);\n        return this.http.post(this.path + endpoint, payload, this.headerAuthenticationAdmin())\n            .map(res => res.json())\n            .catch(this.errors);\n    };\n\n    postAdmin(endpoint, payload) {\n        console.log('payload --> ',payload);\n        let body = JSON.stringify({email: payload.email, password: payload.password})\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http.post(this.path + endpoint, body, options)\n            .map(res => res.json())\n            .catch(this.errors);\n    };   \n\n    errors = (response: Response) => {\n        let _error = new _ERROR().error;\n\n        console.log({'error': _error[response.json().error]});\n        if(response.json().error == 9 || response.json().error == 14) {\n            console.log('Token has expired');\n            this.expired_token();\n        }\n\n        // If error is SERVER ERROR or CLIENT ERROR\n        else if (response.status >= 401 && response.status <= 511) {\n            return Observable.throw({'error': response.status});\n        }\n\n        // If error is created in backend\n        else {\n            if(response.json().error) {\n                return Observable.throw({'error': _error[response.json().error]});\n            } else {\n                return Observable.throw(response.json());\n            }\n            //return Observable.throw(response.json() || 'El servidor ha tenido un error.');\n        }  \n    }; \n\n    expired_token() {\n        localStorage.removeItem('currentUser');\n        localStorage.removeItem('admin');\n        //this.router.navigateByUrl('/login');\n        window.location.replace(\"/login\");\n    };\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Http, },\n{type: LocalStorageService, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}