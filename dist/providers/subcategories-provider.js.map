{"version":3,"file":"subcategories-provider.js","sourceRoot":"","sources":["../../src/providers/subcategories-provider.ts"],"names":[],"mappings":";;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,SAAS;OACT,EAAE,IAAI,EAAE,MAAM,eAAe;OAC7B,EAAE,mBAAmB,EAAE,MAAM,yBAAyB;OACtD,EAAE,eAAe,EAAE,MAAM,sBAAsB;OAG/C,EAAE,WAAW,EAAE,MAAM,iBAAiB;OAGtC,EAAE,gBAAgB,EAAE,MAAM,4BAA4B;AAG7D;IAA0C,wCAAW;IAKjD,8BAAmB,IAAU,EAAS,YAAiC;QACnE,kBAAM,IAAI,EAAE,YAAY,CAAC,CAAC;QADX,SAAI,GAAJ,IAAI,CAAM;QAAS,iBAAY,GAAZ,YAAY,CAAqB;QAHvE,uBAAuB;QACvB,kBAAa,GAAuB,EAAE,CAAC;IAIvC,CAAC;IAED,iFAAiF;IACjF,+CAAgB,GAAhB,UAAiB,OAAO,EAAE,OAAO,EAAE,OAAO;QAA1C,iBAmBC;QAjBG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,wCAAwC;QACxC,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,GAAG,SAAS,GAAG,OAAO;YACxC,YAAY,GAAG,OAAO,GAAG,wBAAwB,EAAE,IAAI,CAAC;aAChE,SAAS,CAAC,UAAA,aAAa;YACpB,GAAG,CAAC,CAAe,UAAiC,EAAjC,KAAoB,aAAa,EAAjC,cAAiC,EAAjC,IAAiC,CAAC;gBAAhD,IAAI,MAAM,SAAA;gBACX,IAAI,WAAW,GAAqB,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBACjE,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACxC;YACD,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,CAAA;QACrC,CAAC,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED,6EAA6E;IAC7E,6CAAc,GAAd,UAAe,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,aAAa;QAEtD,wCAAwC;QACxC,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,GAAG,SAAS,GAAG,OAAO;YACxC,YAAY,GAAG,UAAU,GAAG,eAAe;YAC3C,aAAa,EAAE,IAAI,CAAC;aAC5B,SAAS,CAAC,UAAA,eAAe;YACtB,IAAI,WAAW,GAAqB,IAAI,gBAAgB,CAAC,eAAe,CAAC,CAAC;YAC1E,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/B,CAAC,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAEE,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,mCAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,IAAI,GAAG;QACd,EAAC,IAAI,EAAE,mBAAmB,GAAG;KAC5B,CAAC;IACF,2BAAC;AAAD,CAAC,AAzDD,CAA0C,WAAW,GAyDpD","sourcesContent":["import { Injectable } from '@angular/core';\nimport 'rxjs/Rx';\nimport { Http } from '@angular/http';\nimport { LocalStorageService } from 'angular-2-local-storage';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n// Providers\nimport { BaseService } from './base-provider';\n\n// Models\nimport { SubcategoryModel } from '../models/subcategoryModel';\n\n\nexport class SubcategoriesService extends BaseService {\n\n    // Subcategories array \n    subcategories: SubcategoryModel[] = [];\n\n    constructor(public http: Http, public localStorage: LocalStorageService) {\n        super(http, localStorage);\n    }\n\n    // getSubcategories function: obtain information of subcategories in Botica store\n    getSubcategories(chainId, storeId, categId) {\n\n        this.subcategories = [];\n\n        // Initial value to the observer is null\n        let observer = new BehaviorSubject(null);\n\n        this.getBase('chain/' + chainId + '/store/' + storeId + \n                     '/category/' + categId + '/subcategories/active/', null)\n            .subscribe(subcategories => {\n                for (var subcat of <SubcategoryModel[]>subcategories) {\n                    var subcategory: SubcategoryModel = new SubcategoryModel(subcat);\n                    this.subcategories.push(subcategory);\n                }\n                observer.next(this.subcategories)  \n            }, error => {\n                observer.next(error);\n            });\n        return observer;\n    }\n    \n    // getSubcategory function: obtain information of subcategory in Krono Market\n    getSubcategory(chainId, storeId, categoryId, subcategoryId) {\n\n        // Initial value to the observer is null\n        let observer = new BehaviorSubject(null);\n\n        this.getBase('chain/' + chainId + '/store/' + storeId + \n                     '/category/' + categoryId + '/subcategory/' +\n                     subcategoryId, null)\n            .subscribe(subcategoryData => {\n                let subcategory: SubcategoryModel = new SubcategoryModel(subcategoryData);\n                observer.next(subcategory);\n            }, error => {\n                observer.next(error);\n            });\n        return observer;\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Http, },\n{type: LocalStorageService, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}