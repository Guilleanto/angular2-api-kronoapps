{"version":3,"file":"chains-provider.js","sourceRoot":"","sources":["../../src/providers/chains-provider.ts"],"names":[],"mappings":";;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,SAAS;OACT,EAAE,IAAI,EAAE,MAAM,eAAe;OAC7B,EAAE,mBAAmB,EAAE,MAAM,yBAAyB;OACtD,EAAE,eAAe,EAAE,MAAM,sBAAsB;OAG/C,EAAE,WAAW,EAAE,MAAM,iBAAiB;OAGtC,EAAE,UAAU,EAAE,MAAM,sBAAsB;AAIjD;IAAmC,iCAAW;IAM1C,uBAAmB,IAAU,EAAS,YAAiC;QACnE,kBAAM,IAAI,EAAE,YAAY,CAAC,CAAC;QADX,SAAI,GAAJ,IAAI,CAAM;QAAS,iBAAY,GAAZ,YAAY,CAAqB;QAJvE,eAAe;QACf,WAAM,GAAiB,EAAE,CAAC;IAK1B,CAAC;IAED,oDAAoD;IACpD,iCAAS,GAAT,UAAU,OAAO,EAAE,aAAa,EAAE,MAAM;QAAxC,iBAsBC;QApBG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,wCAAwC;QACxC,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,GAAG,aAAa,GAAG,QAAQ,GAAG,MAAM,GAAG,iBAAiB,CAAC;aACxF,SAAS,CAAC,UAAA,MAAM;YACT,GAAG,CAAC,CAAY,UAAoB,EAApB,KAAc,MAAM,EAApB,cAAoB,EAApB,IAAoB,CAAC;gBAAhC,IAAI,GAAG,SAAA;gBACR,IAAI,KAAK,GAAe,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC5C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;aACxC;YACD,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;YACpD,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,QAAQ,CAAC;IAEpB,CAAC;IAEE,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,4BAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,IAAI,GAAG;QACd,EAAC,IAAI,EAAE,mBAAmB,GAAG;KAC5B,CAAC;IACF,oBAAC;AAAD,CAAC,AA3CD,CAAmC,WAAW,GA2C7C","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport { Http } from '@angular/http';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\n// Providers\r\nimport { BaseService } from './base-provider';\r\n\r\n// Models\r\nimport { ChainModel } from '../models/chainModel';\r\nimport { CityModel } from '../models/cityModel';\r\n\r\n\r\nexport class ChainsService extends BaseService {\r\n\r\n    // chains array\r\n    chains: ChainModel[] = [];\r\n    chainsStorage: {};\r\n\r\n    constructor(public http: Http, public localStorage: LocalStorageService) {\r\n        super(http, localStorage);\r\n    }\r\n\r\n    // getChains function: obtain information of chains \r\n    getChains(baseUrl, applicationId, cityId) {\r\n\r\n        this.chains = [];\r\n        this.chainsStorage = {};\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl, 'application/' + applicationId + '/city/' + cityId + '/chains/active/')\r\n            .subscribe(chains => {\r\n                    for (var cha of <ChainModel[]>chains) {\r\n                        var chain: ChainModel = new ChainModel(cha);\r\n                        this.chains.push(chain);\r\n                        this.chainsStorage[chain.id] = chain;\r\n                    }\r\n                    this.localStorage.set('chains', this.chainsStorage);\r\n                    observer.next(this.chains);\r\n                }, error => {\r\n                    observer.next(error);\r\n                });\r\n        return observer; \r\n\r\n    }     \r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Http, },\n{type: LocalStorageService, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}