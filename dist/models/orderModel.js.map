{"version":3,"file":"orderModel.js","sourceRoot":"","sources":["../../src/models/orderModel.ts"],"names":[],"mappings":"AAAA;IA8BI,oBAAY,UAAqB;QAArB,0BAAqB,GAArB,iBAAqB;QA5BjC,oBAAoB;QACpB,OAAE,GAAW,CAAC,CAAC;QACf,UAAK,GAAkB,EAAE,CAAC;QAC1B,aAAQ,GAAkB,EAAE,CAAC;QAC7B,kBAAa,GAAkB,EAAE,CAAC;QAClC,gBAAW,GAAW,EAAE,CAAC;QACzB,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAkB,EAAE,CAAC;QAC5B,WAAM,GAAW,EAAE,CAAC;QACpB,eAAU,GAAW,EAAE,CAAC;QACxB,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAW,IAAI,CAAC;QACxB,mBAAc,GAAW,IAAI,CAAC;QAC9B,mBAAc,GAAW,IAAI,CAAC;QAC9B,gBAAW,GAAW,EAAE,CAAC;QACzB,iBAAY,GAAW,EAAE,CAAC;QAC1B,wBAAmB,GAAW,EAAE,CAAC;QACjC,sBAAiB,GAAW,EAAE,CAAC;QAC/B,iBAAY,GAAW,CAAC,CAAC;QACzB,UAAK,GAAW,CAAC,CAAC;QAClB,WAAM,GAAW,CAAC,CAAC;QACnB,aAAQ,GAAW,CAAC,CAAC;QACrB,WAAM,GAAW,IAAI,CAAC;QACtB,YAAO,GAAW,CAAC,CAAC;QACpB,iBAAY,GAAW,IAAI,CAAC;QAC5B,kBAAa,GAAW,CAAC,CAAC;QAC1B,YAAO,GAAW,EAAE,CAAC;QAGjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAID,sBAAI,kCAAU;QAFd,qDAAqD;QACrD,8BAA8B;aAC9B,UAAe,UAAc;YACzB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;gBACvB,EAAE,CAAC,CAAC,OAAO,UAAU,CAAC,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC5B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBACf,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,EACxB,wCAAwC,CAAC,CAAC;gBAClD,CAAC;YACL,CAAC;QACL,CAAC;;;OAAA;IAEL,iBAAC;AAAD,CAAC,AAjDD,IAiDC","sourcesContent":["export class OrderModel {\n\n    // Orders attributes\n    id: number = 0;\n    items: Array<Object> = [];\n    payments: Array<Object> = [];\n    prescriptions: Array<Object> = [];\n    client_name: string = '';\n    chainId: number = 0;\n    coupons: Array<Object> = [];\n    status: string = '';\n    date_start: string = '';\n    date_end: string = '';\n    comments: string = null;\n    address_line_1: string = null;\n    address_line_2: string = null;\n    deliv_order: string = '';\n    schedule_day: string = '';\n    schedule_hour_start: string = '';\n    schedule_hour_end: string = '';\n    order_number: number = 0;\n    total: number = 0;\n    cityId: number = 0;\n    clientId: number = 0;\n    zoneId: number = null;\n    storeId: number = 0;\n    foundationId: number = null;\n    applicationId: number = 0;\n    created: string = '';\n\n    constructor(attributes: {} = null) {\n        this.attributes = attributes;\n    }\n\n    // set function: set attributes values of orders and \n    //               verify types \n    set attributes(attributes: {}) {\n        for (var k in attributes) {\n            if (typeof attributes[k] == typeof this[k]) {\n                this[k] = attributes[k];\n            }\n            else {\n                this[k] = null;\n                console.log(\"La variable\", k, \n                    \"no posee el tipo correcto o requerido.\");\n            }\n        }\n    }\n\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}