{"version":3,"file":"basket-provider.js","sourceRoot":"","sources":["../../../src/providers/basket-provider.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,SAAS,CAAC;AACjB,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACrC,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;;AAG9D,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;;AAG9C,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;;IAGjB,iCAAW;IAI1C,uBAAmB,IAAU,EAAS,YAAiC;QAAvE,YACI,kBAAM,IAAI,EAAE,YAAY,CAAC,SAC5B;QAFkB,UAAI,GAAJ,IAAI,CAAM;QAAS,kBAAY,GAAZ,YAAY,CAAqB;;KAEtE;IAED,mDAAmD;IACnD,yDAAyD;;;IACzD,iCAAS;;;IAAT,UAAU,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,OAAO;;QAG7C,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAG,cAAc,GAAG,aAAa,GAAG,UAAU,GAAG,MAAM;YAC9D,SAAS,GAAG,OAAO,GAAG,UAAU,EAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC;aACpC,SAAS,CAAC,UAAA,MAAM;YACb,IAAI,YAAY,GAAgB,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;YACxD,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC/B,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;KACnB;IACD,oCAAY,GAAZ,UAAa,OAAO,EAAE,aAAa;;QAG/B,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,GAAC,aAAa,GAAE,eAAe,GAAE,aAAa;YACjF,WAAW,EAAE,IAAI,CAAC;aACrB,SAAS,CAAC,UAAA,IAAI;YACb,IAAI,OAAO,GAAG,IAAI,CAAC;YACnB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB,EAAC,UAAA,KAAK;YACH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,CAAC,CAAA;QACF,MAAM,CAAC,QAAQ,CAAC;KACnB;IAED,2DAA2D;IAC3D,6CAA6C;;;IAC7C,uCAAe;;;IAAf,UAAgB,OAAO,EAAE,OAAO;QAE5B,OAAO,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;;QAGpD,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,kCAAkC,EAAE,OAAO,EACpD,IAAI,CAAC,oBAAoB,EAAE,CAAC;aACrC,SAAS,CAAC,UAAA,IAAI;YACX,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;KACnB;IAED,yDAAyD;IACzD,4CAA4C;;;IAC5C,gCAAQ;;;IAAR,UAAS,OAAO,EAAC,IAAI,EAAE,MAAW,EAAE,QAAQ;QAA5C,iBA6FC;QA7FsB,uBAAA,EAAA,aAAW;QAE9B,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC;YAEpB,IAAI,CAAC,QAAQ,GAAG;gBACZ,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,IAAI;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,CAAC;gBACP,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;gBACnC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS;gBACzC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;gBACtC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gBACxC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ;gBAC5C,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC;gBAC3C,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,EAAE;aACrB,CAAA;YAED,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAG,4BAA4B,EAAE,IAAI,CAAC,QAAQ,EACrD,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBACrC,SAAS,CAAC,UAAA,IAAI;gBACX,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;gBAClD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC,EAAE,UAAA,KAAK;gBACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;aAC3C,CAAC,CAAC;YACP,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;SAE7B;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;YAE1B,IAAI,CAAC,QAAQ,GAAG;gBACZ,IAAI,EAAE,QAAQ;gBACd,EAAE,EAAE,MAAM;gBACV,WAAW,EAAE,IAAI;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,CAAC;gBACP,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;gBACnC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS;gBACzC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;gBACtC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gBACxC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ;gBAC5C,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC;gBAC3C,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,EAAE;aACrB,CAAA;YAED,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAG,4BAA4B,EAAE,IAAI,CAAC,QAAQ,EACrD,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBACrC,SAAS,CAAC,UAAA,IAAI;gBACX,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;aACpD,EAAE,UAAA,KAAK;gBACJ,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;aAC3C,CAAC,CAAC;SACV;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;YAE5B,IAAI,CAAC,QAAQ,GAAG;gBACZ,IAAI,EAAE,QAAQ;gBACd,EAAE,EAAE,MAAM;aACb,CAAA;YAED,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAG,4BAA4B,EAAE,IAAI,CAAC,QAAQ,EACrD,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBACrC,SAAS,CAAC,UAAA,IAAI;gBACX,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;aACtD,EAAE,UAAA,KAAK;gBACJ,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;aAC3C,CAAC,CAAC;YACP,IAAI,CAAC,aAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;SAClD;KACJ;;gBA7JJ,UAAU;;;;gBAVF,IAAI;gBAEJ,mBAAmB;;wBAJ5B;EAamC,WAAW;SAAjC,aAAa","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport { Http } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\n\r\n// Providers\r\nimport { BaseService } from './base-provider';\r\n\r\n// Models\r\nimport { BasketModel } from '../models/basketModel';\r\n\r\n@Injectable()\r\nexport class BasketService extends BaseService {\r\n\r\n    itemPost: any;\r\n\r\n    constructor(public http: Http, public localStorage: LocalStorageService) {               \r\n        super(http, localStorage);\r\n    }\r\n\r\n    // getBasket function: obtain information of basket\r\n    //                     of specific client in Botica store\r\n    getBasket(baseUrl, applicationId, userId, storeId) {\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl,  'application/' + applicationId + '/client/' + userId + \r\n                     '/store/' + storeId + '/basket/', \r\n                     this.headerAuthentication())\r\n            .subscribe(basket => {\r\n                var basketClient: BasketModel = new BasketModel(basket);\r\n                observer.next(basketClient);\r\n            }, error => {\r\n                observer.next(error);\r\n            }); \r\n        return observer;\r\n    }\r\n    validVersion(baseUrl, applicationId)  {\r\n\r\n        // Initial value to the observer is null, version is null without Token,\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl, \"v2/application/\"+applicationId +\"/application/\"+ applicationId +\r\n            \"/version/\", null)\r\n        .subscribe(data =>{\r\n          var version = data;\r\n          observer.next(version);\r\n        },error => {\r\n            observer.next(error);\r\n        })\r\n        return observer;\r\n    }\r\n\r\n    // postItems function: post items inside basket of specific\r\n    //                     client in Botica store\r\n    postItemsDelete(baseUrl, payload) {\r\n        \r\n        payload['task'] = 'delete_items';\r\n        console.log(\"payload de lo que hare post\", payload);\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n        this.saveBase(baseUrl, 'client/store/basket/deleteitems/', payload,\r\n                      this.headerAuthentication())\r\n            .subscribe(data => {\r\n                observer.next(data);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer;\r\n    }\r\n\r\n    // postItem function: post item inside basket of specific\r\n    //                    client in Botica store\r\n    postItem(baseUrl,item, itemId=null, typeTask) {\r\n\r\n        if (typeTask == 'add') {\r\n\r\n            this.itemPost = {\r\n                task: typeTask,\r\n                observation: null,\r\n                quantity: item.quantity,\r\n                checked: false,\r\n                cost: 0,\r\n                color_prim: item.color_prim,\r\n                color_sec: item.color_sec,\r\n                image_default: item.images[0].image,\r\n                unit_default: item.unit_default.unit_type,\r\n                price_default: item.unit_default.price,\r\n                weight_default: item.unit_default.weight,\r\n                quantity_default: item.unit_default.quantity,\r\n                description: item.description,\r\n                name: item.name,\r\n                has_prom: item.has_prom,\r\n                has_prescription: item.has_prescription,\r\n                percentage: item.percentage,\r\n                orderId: null,\r\n                basketId: this.localStorage.get('basketId'),\r\n                listId: null,\r\n                productId: item.id\r\n            }\r\n            \r\n            this.saveBase(baseUrl , 'client/store/basket/items/', this.itemPost,\r\n                          this.headerAuthentication())\r\n                .subscribe(data => {\r\n                    console.log(\"ITEMPOST AL AGREGAR\", this.itemPost);\r\n                    item.loadedProduct.next(data);\r\n                }, error => {\r\n                    item.loadedProduct.next(error);\r\n                    console.log(\"ESTE FUE EL ERROR\", error);\r\n                });\r\n            return item.loadedProduct;\r\n      \r\n        }\r\n\r\n        else if (typeTask == 'edit') {\r\n\r\n            this.itemPost = {\r\n                task: typeTask,\r\n                id: itemId,\r\n                observation: null,\r\n                quantity: item.quantity,\r\n                checked: false,\r\n                cost: 0,\r\n                color_prim: item.color_prim,\r\n                color_sec: item.color_sec,\r\n                image_default: item.images[0].image,\r\n                unit_default: item.unit_default.unit_type,\r\n                price_default: item.unit_default.price,\r\n                weight_default: item.unit_default.weight,\r\n                quantity_default: item.unit_default.quantity,\r\n                description: item.description,\r\n                name: item.name,\r\n                has_prom: item.has_prom,\r\n                has_prescription: item.has_prescription,\r\n                percentage: item.percentage,\r\n                orderId: null,\r\n                basketId: this.localStorage.get('basketId'),\r\n                listId: null,\r\n                productId: item.id\r\n            }\r\n\r\n            this.saveBase(baseUrl , 'client/store/basket/items/', this.itemPost,\r\n                          this.headerAuthentication())                 \r\n                .subscribe(data => {\r\n                    console.log(\"ITEMPOST AL EDITAR\", this.itemPost);\r\n                }, error => {\r\n                    console.log(\"ESTE FUE EL ERROR\", error);\r\n                });  \r\n        }\r\n\r\n        else if (typeTask == 'delete') {\r\n\r\n            this.itemPost = {\r\n                task: typeTask,\r\n                id: itemId\r\n            }\r\n\r\n            this.saveBase(baseUrl , 'client/store/basket/items/', this.itemPost,\r\n                          this.headerAuthentication())\r\n                .subscribe(data => {\r\n                    console.log(\"ITEMPOST AL ELIMINAR\", this.itemPost);\r\n                }, error => {\r\n                    console.log(\"ESTE FUE EL ERROR\", error);\r\n                });\r\n            item.loadedProduct = new BehaviorSubject(null);\r\n        }\r\n    }\r\n\r\n}"]}