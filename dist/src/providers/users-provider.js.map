{"version":3,"file":"users-provider.js","sourceRoot":"","sources":["../../../src/providers/users-provider.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,SAAS,CAAC;AACjB,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACrC,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;;AAG9D,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;;AAG9C,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;;IAGd,gCAAW;IAKzC,sBAAmB,IAAU,EAAS,YAAiC;QAAvE,YACI,kBAAM,IAAI,EAAE,YAAY,CAAC,SAC5B;QAFkB,UAAI,GAAJ,IAAI,CAAM;QAAS,kBAAY,GAAZ,YAAY,CAAqB;;qBAFnD,EAAE;;KAIrB;IAED,+DAA+D;;IAC/D,8BAAO;;IAAP,UAAQ,OAAO,EAAE,aAAa,EAAE,MAAM;;QAGlC,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAG,cAAc,GAAG,aAAa,GAAG,UAAU,GAAG,MAAM,GAAG,GAAG,EACpE,IAAI,CAAC,oBAAoB,EAAE,CAAC;aACpC,SAAS,CAAC,UAAA,QAAQ;YACf,IAAI,IAAI,GAAc,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC9C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,CAAC,CAAC;QACN,MAAM,CAAC,QAAQ,CAAC;KACpB;IAED,2DAA2D;;IAC3D,+BAAQ;;IAAR,UAAS,OAAO,EAAE,OAAO,EAAE,IAAI;;QAG3B,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QAEvB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAG,sBAAsB,EAAE,OAAO,EAAE,IAAI,CAAC;aACzD,SAAS,CAAC,UAAA,IAAI;YACX,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;KACnB;IAED,oDAAoD;IACpD,gDAAgD;;;IAChD,kCAAW;;;IAAX,UAAY,OAAO,EAAC,OAAO,EAAE,IAAI;;QAG7B,IAAI,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QAEvB,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAG,6BAA6B,EAAE,OAAO,EAChD,IAAI,CAAC,oBAAoB,EAAE,CAAC;aACrC,SAAS,CAAC,UAAA,IAAI;YACX,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB,EAAE,UAAA,KAAK;YACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB,CAAC,CAAC;QACP,MAAM,CAAC,QAAQ,CAAC;KACnB;;gBA/DJ,UAAU;;;;gBAVF,IAAI;gBAEJ,mBAAmB;;uBAJ5B;EAakC,WAAW;SAAhC,YAAY","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport { Http } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\n\r\n// Providers\r\nimport { BaseService } from './base-provider';\r\n\r\n// Models\r\nimport { UserModel } from '../models/userModel';\r\n\r\n@Injectable()\r\nexport class UsersService extends BaseService {\r\n\r\n    // user array\r\n    user: UserModel[] = [];\r\n\r\n    constructor(public http: Http, public localStorage: LocalStorageService) {\r\n        super(http, localStorage);\r\n    }\r\n\r\n    // getUser function: obtain information of user in Botica Junin\r\n    getUser(baseUrl, applicationId, userId) {\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl , 'application/' + applicationId + '/client/' + userId + '/', \r\n                     this.headerAuthentication())\r\n            .subscribe(userData => {\r\n                var user: UserModel = new UserModel(userData);\r\n                observer.next(user);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n         return observer;             \r\n    }\r\n\r\n    // postUser function: create new user in application Botica\r\n    postUser(baseUrl, payload, task) {\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        payload['task'] = task;\r\n\r\n        console.log(\"PAYLOAD USER REGISTRO\", payload);\r\n        this.saveBase(baseUrl , 'application/clients/', payload, null)\r\n            .subscribe(data => {\r\n                observer.next(data);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer;        \r\n    }\r\n\r\n    // postAddress function: create or delete address in\r\n    //                       specific client profile\r\n    postAddress(baseUrl,payload, task) {\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        payload['task'] = task;\r\n\r\n        console.log(\"PAYLOAD ADDRESS USER\", payload);\r\n        this.saveBase(baseUrl , 'application/client/address/', payload, \r\n                      this.headerAuthentication())\r\n            .subscribe(data => {\r\n                observer.next(data);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer;  \r\n    }\r\n\r\n}"]}