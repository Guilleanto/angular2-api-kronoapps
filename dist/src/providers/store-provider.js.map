{"version":3,"file":"store-provider.js","sourceRoot":"","sources":["../../../src/providers/store-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport 'rxjs/Rx';\r\nimport { Http } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\n\r\n// Providers\r\nimport { BaseService } from './base-provider';\r\n\r\n// Models\r\nimport { StoreModel } from '../models/storeModel';\r\nimport { ProductModel } from '../models/productModel';\r\nimport { ScheduleModel } from '../models/scheduleModel';\r\nimport { PaymentsModel } from '../models/paymentsModel';\r\nimport { DelivStoreModel } from '../models/delivStoreModel';\r\nimport { BannerModel } from '../models/bannerModel';\r\nimport { DelivZoneModel } from '../models/delivZoneModel';\r\n\r\n@Injectable()\r\nexport class StoreService extends BaseService {\r\n\r\n    // Products array\r\n    products: ProductModel[] = [];\r\n\r\n    // Schedules array\r\n    schedules: ScheduleModel[] = [];\r\n    payments: PaymentsModel[] = [];\r\n\r\n    // Array to save object storeModel\r\n    stores: StoreModel[] = [];\r\n\r\n    // Forms of delivery array\r\n    delivStore: DelivStoreModel[] = [];\r\n    delivZone: DelivZoneModel[] = [];\r\n\r\n    // Banners array\r\n    banners: BannerModel[] = [];\r\n\r\n    constructor(public http: Http, public localStorage: LocalStorageService) {\r\n        super(http, localStorage);\r\n    }\r\n\r\n    // getStore function: obtain information of store Botica Junin\r\n    getStore(baseUrl, chainId, storeId) {\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl, 'chain/' + chainId + '/store/' + storeId \r\n                     + '/active/', null)\r\n            .subscribe(storeData => {\r\n                var store: StoreModel = new StoreModel(storeData);\r\n                observer.next(store);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer;          \r\n    }\r\n\r\n    // getBanners function: obtain banners from specific store Botica Junin\r\n    getBanners(baseUrl, chainId, storeId) {\r\n\r\n        this.banners = [];\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl, 'chain/' + chainId + '/store/' + storeId \r\n                     + '/banners/active/', null)\r\n            .subscribe(banners => {\r\n                for (var ban of <BannerModel[]>banners) {\r\n                    var banner: BannerModel = new BannerModel(ban);\r\n                    this.banners.push(banner);\r\n                }\r\n                observer.next(this.banners);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer;    \r\n    }\r\n\r\n    // getBestsellersProductsStore function: obtain information of bestsellers products in Botica store\r\n    //                                       when user is not logged\r\n    getBestsellersProductsStore(baseUrl, chainId, storeId) {\r\n\r\n        this.products = [];\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl, 'chain/' + chainId + '/store/' + storeId + \r\n                     '/bestsellers/', null)\r\n            .subscribe(products => {\r\n                for (var prod of <ProductModel[]>products) {\r\n                    var product: ProductModel = new ProductModel(prod);\r\n                    this.products.push(product);\r\n                }\r\n                observer.next(this.products);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer;   \r\n    }\r\n\r\n    // getBestsellersProductsUser function: obtain information of bestsellers products in Botica store\r\n    //                                      from specific user\r\n    getBestsellersProductsUser(baseUrl, applicationId, userId, storeId) {\r\n\r\n        this.products = [];\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl, 'application/' + applicationId + '/client/' + userId + \r\n                     '/store/' + storeId + '/bestsellers/', null)\r\n            .subscribe(products => {\r\n                for (var prod of <ProductModel[]>products) {\r\n                    var product: ProductModel = new ProductModel(prod);\r\n                    this.products.push(product);\r\n                }\r\n                observer.next(this.products);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer;   \r\n    }\r\n\r\n    // getSchedule function: obtain information of schedule in Botica store\r\n    getSchedule(baseUrl, chainId, storeId) {\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.schedules = [];\r\n\r\n        this.getBase(baseUrl, 'chain/' + chainId + '/store/' + storeId + \r\n                     '/schedules/', this.headerAuthentication())\r\n            .subscribe(schedulesData => {\r\n                var schedule: ScheduleModel = new ScheduleModel(schedulesData);\r\n                this.schedules.push(schedule);\r\n                observer.next(this.schedules);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer; \r\n    }\r\n\r\n    // getSchedule function: obtain information of schedule in Botica store\r\n    getPayments(baseUrl, chainId, storeId) {\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.payments = [];\r\n\r\n        this.getBase(baseUrl , 'chain/' + chainId + '/store/' + storeId + \r\n                     '/payments/', this.headerAuthentication())\r\n            .subscribe(payments => {\r\n                for (var pay of <PaymentsModel[]>payments) {\r\n                    var payment: PaymentsModel = new PaymentsModel(pay);\r\n                    this.payments.push(payment);\r\n                }\r\n                observer.next(this.payments);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer; \r\n    }     \r\n\r\n    // getDelivStores function: obtain information of existent type of delivery in\r\n    //                          Botica store\r\n    getDelivStores(baseUrl , chainId, storeId) {\r\n\r\n        this.delivStore = [];\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl,  'chain/' + chainId + '/store/' + storeId + \r\n                     '/delivstores/', this.headerAuthentication())\r\n            .subscribe(delivStore => {\r\n                for (var deliv of <DelivStoreModel[]>delivStore) {\r\n                    var deliv: DelivStoreModel = new DelivStoreModel(deliv);\r\n                    this.delivStore.push(deliv);\r\n                }\r\n                observer.next(this.delivStore);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer; \r\n    }\r\n  \r\n    // getStores function: obtain information of different Botica Junin stores       \r\n    getStores(baseUrl, chainId) {\r\n\r\n        this.stores = [];\r\n\r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl, 'chain/' + chainId + '/stores/active/', null)\r\n            .subscribe(stores => {\r\n                for (var store of <StoreModel[]>stores) {\r\n                    var store: StoreModel = new StoreModel(store);\r\n                    this.stores.push(store);\r\n                }\r\n                observer.next(this.stores);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer; \r\n    }\r\n\r\n    // getDelivZones function: obtain information of different Delivery Krono Zones\r\n    getDelivZones(baseUrl, chainId, storeId){\r\n        \r\n        this.delivZone = [];\r\n        \r\n        // Initial value to the observer is null\r\n        let observer = new BehaviorSubject(null);\r\n\r\n        this.getBase(baseUrl,'chain/' + chainId + '/store/' + storeId + \r\n                        '/delivzones/', this.headerAuthentication())\r\n            .subscribe(delivZones => {\r\n                for (var deliv of <DelivZoneModel[]>delivZones) {\r\n                    var deliv: DelivZoneModel = new DelivZoneModel(deliv);\r\n                    this.delivZone.push(deliv);\r\n                }\r\n                observer.next(this.delivZone);\r\n            }, error => {\r\n                observer.next(error);\r\n            });\r\n        return observer; \r\n    }\r\n    \r\n}"]}